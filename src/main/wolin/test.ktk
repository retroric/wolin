package pl.qus.wolin

// raster interrupt colour band taken from:
// https://gist.github.com/bremensaki/8f33cd7d67b78377881c7eb7147c0f32

var interruptRoutineVector: uword^0x314 // this is C64 raster interrupt vector
var cia1InerruptCtrlReg: ubyte^0xDC0D
var vicScreenCtrlReg1: ubyte^0xD011
var vicRasterLine: ubyte^0xD012
var vicInterruptStatusReg: ubyte^0xd019
var vicInterruptCtrlReg: ubyte^0xd01a
var vicBorder: ubyte^53280
var vicBackground: ubyte^53281
var i: ubyte
var maskInterrupts: bool^CPU.I

var spritesOn: ubyte^0xd015
var sprite0X: ubyte^0xd000
var sprite0Y: ubyte^0xd001
var spritesFat: ubyte^0xd01d
var spritesTall: ubyte^0xd017
var sprite0Color: ubyte^0xd027

fun clearScreen^0xe544()

interrupt fun backgroundToBlue() {
    interruptRoutineVector = backgroundToWhite
    vicRasterLine = 140
    vicBorder = 6
    vicBackground = 6
    vicInterruptStatusReg = 0xff
    return@0xea31
}

interrupt fun backgroundToWhite() {
    interruptRoutineVector = backgroundToBlue
    vicRasterLine = 160
    vicBorder = 1
    vicBackground = 1
    vicInterruptStatusReg = 0xff
    return@0xea31
}

interrupt fun topRoutine() {
    // top of screen - set bit
    vicScreenCtrlReg1 := 8 // 25 rows
    vicBorder = 0
    interruptRoutineVector = bottomRoutine
    vicRasterLine = 0xf9 // at line f9 set to 24 rows
    vicInterruptStatusReg = 0xff
    return@0xea31
}

interrupt fun bottomRoutine() {
    vicScreenCtrlReg1 &= 0xf7 // 24 rows
    vicBorder = 1
    interruptRoutineVector = topRoutine
    vicRasterLine = 0xff
    vicInterruptStatusReg = 0xff // at line ff set to 25 rows
    return@0xea31
}

fun onRasterGoto(line: ubyte, proc: uword) {
    interruptRoutineVector = proc
    vicRasterLine = line
}

// na ramkę - bit 3 vicScreenCtrlReg1
// wyczyścić go w rządku $f2-$fa
// ustawić na górze ekranu

fun rasterBar() {
    vicBorder = 6                                    // Init screen and border to blue
    vicBackground = 6
    vicInterruptCtrlReg := 1                         // Enable raster interrupts
    vicScreenCtrlReg1 .= 128                         // High bit of raster line cleared, we're only working within single byte ranges
    vicRasterLine = 140                              // We want an interrupt at the top line
    //interruptRoutineVector = backgroundToBlue        // IRQ vector addresses
    onRasterGoto(140, backgroundToBlue)
}

fun openBorder() {
// na ramkę - bit 3 vicScreenCtrlReg1
// wyczyścić go w rządku $f2-$fa
// ustawić na górze ekranu


    spritesOn := 1
    spritesFat := 1
    spritesTall := 1
    sprite0X = 100
    sprite0Y = 30
    sprite0Color = 2

    vicInterruptCtrlReg := 1                         // Enable raster interrupts
    vicScreenCtrlReg1 .= 128                         // High bit of raster line cleared, we're only working within single byte ranges
    vicRasterLine = 0xf9
    interruptRoutineVector = bottomRoutine
    //onRasterGoto(0xf9, bottomRoutine)
}

fun main() {
    clearScreen()
    maskInterrupts = true                            // Suspend interrupts during init
    cia1InerruptCtrlReg = 0x7f                       // Disable CIA

    rasterBar()
    //openBorder()

    maskInterrupts = false                           // Enable interrupts again

    do {} while (true)                               // Eternal do-nothing loop, we're done.
}
